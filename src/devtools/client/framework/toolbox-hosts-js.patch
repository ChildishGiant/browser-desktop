diff --git a/devtools/client/framework/toolbox-hosts.js b/devtools/client/framework/toolbox-hosts.js
index 19098d7fe3ec8c3018e3594536284f4ec958574a..c2ce23e556b41f89a2e7904be7ce6367bb3f7a75 100644
--- a/devtools/client/framework/toolbox-hosts.js
+++ b/devtools/client/framework/toolbox-hosts.js
@@ -56,16 +56,17 @@ BottomHost.prototype = {
   /**
    * Create a box at the bottom of the host tab.
    */
-  create: async function() {
+  create: async function () {
     await gDevToolsBrowser.loadBrowserStyleSheet(this.hostTab.ownerGlobal);
 
-    const gBrowser = this.hostTab.ownerDocument.defaultView.gBrowser;
-    const ownerDocument = gBrowser.ownerDocument;
-    this._browserContainer = gBrowser.getBrowserContainer(
+    const { dot } = this.hostTab.ownerDocument.defaultView;
+    const { ownerDocument } = this.hostTab;
+
+    this._browserContainer = dot.tabs.getBrowserContainer(
       this.hostTab.linkedBrowser
     );
 
-    this._splitter = ownerDocument.createXULElement("splitter");
+    this._splitter = ownerDocument.createElement("hr");
     this._splitter.setAttribute("class", "devtools-horizontal-splitter");
     // Avoid resizing notification containers
     this._splitter.setAttribute("resizebefore", "flex");
@@ -89,7 +90,7 @@ BottomHost.prototype = {
   /**
    * Raise the host.
    */
-  raise: function() {
+  raise: function () {
     focusTab(this.hostTab);
   },
 
@@ -97,12 +98,12 @@ BottomHost.prototype = {
    * Set the toolbox title.
    * Nothing to do for this host type.
    */
-  setTitle: function() {},
+  setTitle: function () { },
 
   /**
    * Destroy the bottom dock.
    */
-  destroy: function() {
+  destroy: function () {
     if (!this._destroyed) {
       this._destroyed = true;
 
@@ -135,14 +136,17 @@ class SidebarHost {
    */
   async create() {
     await gDevToolsBrowser.loadBrowserStyleSheet(this.hostTab.ownerGlobal);
-    const gBrowser = this.hostTab.ownerDocument.defaultView.gBrowser;
-    const ownerDocument = gBrowser.ownerDocument;
-    this._browserContainer = gBrowser.getBrowserContainer(
+
+    const { dot } = this.hostTab.ownerDocument.defaultView;
+    const { ownerDocument } = this.hostTab;
+
+    this._browserContainer = dot.tabs.getBrowserContainer(
       this.hostTab.linkedBrowser
     );
-    this._browserPanel = gBrowser.getPanel(this.hostTab.linkedBrowser);
 
-    this._splitter = ownerDocument.createXULElement("splitter");
+    this._browserPanel = dot.tabs.getPanel(this.hostTab.linkedBrowser);
+
+    this._splitter = ownerDocument.createElement("hr");
     this._splitter.setAttribute("class", "devtools-side-splitter");
 
     this.frame = createDevToolsFrame(
@@ -182,7 +186,7 @@ class SidebarHost {
    * Set the toolbox title.
    * Nothing to do for this host type.
    */
-  setTitle() {}
+  setTitle() { }
 
   /**
    * Destroy the sidebar.
@@ -235,7 +239,7 @@ WindowHost.prototype = {
   /**
    * Create a new xul window to contain the toolbox.
    */
-  create: function() {
+  create: function () {
     return new Promise(resolve => {
       let flags = "chrome,centerscreen,resizable,dialog=no";
 
@@ -295,7 +299,7 @@ WindowHost.prototype = {
   /**
    * Catch the user closing the window.
    */
-  _boundUnload: function(event) {
+  _boundUnload: function (event) {
     if (event.target.location != this.WINDOW_URL) {
       return;
     }
@@ -307,21 +311,21 @@ WindowHost.prototype = {
   /**
    * Raise the host.
    */
-  raise: function() {
+  raise: function () {
     this._window.focus();
   },
 
   /**
    * Set the toolbox title.
    */
-  setTitle: function(title) {
+  setTitle: function (title) {
     this._window.document.title = title;
   },
 
   /**
    * Destroy the window.
    */
-  destroy: function() {
+  destroy: function () {
     if (!this._destroyed) {
       this._destroyed = true;
 
@@ -344,7 +348,7 @@ function BrowserToolboxHost(hostTab, options) {
 BrowserToolboxHost.prototype = {
   type: "browsertoolbox",
 
-  create: async function() {
+  create: async function () {
     this.frame = createDevToolsFrame(
       this.doc,
       "devtools-toolbox-browsertoolbox-iframe"
@@ -358,19 +362,19 @@ BrowserToolboxHost.prototype = {
   /**
    * Raise the host.
    */
-  raise: function() {
+  raise: function () {
     this.doc.defaultView.focus();
   },
 
   /**
    * Set the toolbox title.
    */
-  setTitle: function(title) {
+  setTitle: function (title) {
     this.doc.title = title;
   },
 
   // Do nothing. The BrowserToolbox is destroyed by quitting the application.
-  destroy: function() {
+  destroy: function () {
     return promise.resolve(null);
   },
 };
@@ -388,18 +392,18 @@ function PageHost(hostTab, options) {
 PageHost.prototype = {
   type: "page",
 
-  create: function() {
+  create: function () {
     return promise.resolve(this.frame);
   },
 
   // Do nothing.
-  raise: function() {},
+  raise: function () { },
 
   // Do nothing.
-  setTitle: function(title) {},
+  setTitle: function (title) { },
 
   // Do nothing.
-  destroy: function() {
+  destroy: function () {
     return promise.resolve(null);
   },
 };
@@ -410,7 +414,7 @@ PageHost.prototype = {
 function focusTab(tab) {
   const browserWindow = tab.ownerDocument.defaultView;
   browserWindow.focus();
-  browserWindow.gBrowser.selectedTab = tab;
+  browserWindow.dot.tabs.get(tab.id).select()
 }
 
 /**
