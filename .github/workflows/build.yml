name: Build

on:
  schedule:
    - cron: "0 20 * * *" # every day at 10pm so the build can be pushed at around midnight
  workflow_dispatch:

jobs:
  linux-64:
    name: 🐧 Linux (64-bit)
    runs-on: ubuntu-20.04
    env:
        CI_SKIP_INIT: true
        SHELL: /bin/sh
    steps:
      - run: echo ${{ github.run_id }}

      - uses: actions/checkout@v2

      - name: Cache build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/cache/sccache
          key: ${{ runner.os }}-${{ hashFiles('**/.github/workflows') }}

      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Verify mozconfig
        run: |
          cat configs/linux/mozconfig

      - name: Set up Git User
        run: |
          git config --global user.email "72629236+dothq-robot@users.noreply.github.com"
          git config --global user.name "dothq-robot"

      - name: Install dependencies
        run: |
          npm i typescript
          sudo apt-get update --fix-missing
          sudo apt-get update
          sudo apt-get install dos2unix
          rustup install nightly
          rustup default nightly

      - name: Download workspace
        run: |
          ./melon download
          cd src
          git init
          echo Init
          git checkout --orphan base
          echo Checkout
          git add -f .
          echo Add
          git commit -am "Firefox"
          echo Commit
          git checkout -b dot
          echo Checkout 2
          cd ..
          sudo rm -rf firefox-*.source.tar.xz

      - name: Fix line-endings
        run: ./melon fix-le

      - name: Import patches
        run: ./melon import --minimal

      - name: Build
        run: |
          cd src
          ./mach bootstrap --application-choice browser --no-interactive
          cd ..
          MOZ_SOURCE_CHANGESET=${{ github.sha }} ./melon build

      - name: Package
        run: |
          cd src
          ./mach package
          cd ..

      - name: Export release data
        shell: bash
        run: |
          echo "DOT_VERSION=$(cat package.json | sed -n 's|.*"firefox-display": "\([^"]*\)".*|\1|p')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Make artifact available
        run: |
          cp ./src/obj-*/dist/dot-*.tar.bz2 .
          mv dot-*.tar.bz2 "dot-${{ env.DOT_VERSION }}.tar.bz2"

      - name: Release
        uses: dothq/tag-and-release-and-upload@master
        with:
          github-token: ${{ secrets.ROBOT_TOKEN }}
          version: "${{ env.DOT_VERSION }}-${{ github.run_id }}"
          name: "Nightly v${{ env.DOT_VERSION }}"
          assets: '["dot-${{ env.DOT_VERSION }}.tar.bz2"]'
          body_path: "/home/runner/work/browser-desktop/browser-desktop/.github/RELEASE_TEMPLATE.md"
          overwrite: true

      - name: Build webhook
        uses: dothq/actions-status-discord@master
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: Build
          avatar_url: "https://github.com/dothq.png"

  linux-32:
    name: 🐧 Linux (32-bit)
    runs-on: ubuntu-20.04
    env:
        CI_SKIP_INIT: true
        SHELL: /bin/sh
    steps:
      - run: echo ${{ github.run_id }}

      - uses: actions/checkout@v2

      - name: Cache build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/cache/sccache
          key: ${{ runner.os }}-${{ hashFiles('**/.github/workflows') }}

      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Verify mozconfig
        run: |
          cat configs/linux/mozconfig-i686

      - name: Set up Git User
        run: |
          git config --global user.email "72629236+dothq-robot@users.noreply.github.com"
          git config --global user.name "dothq-robot"

      - name: Install dependencies
        run: |
          npm i typescript
          sudo apt-get update --fix-missing
          sudo apt-get update
          sudo apt-get install dos2unix
          sudo apt-get install gcc-multilib g++-multilib libdbus-glib-1-dev:i386 libgtk2.0-dev:i386 libgtk-3-dev:i386 libpango1.0-dev:i386 libxt-dev:i386 libx11-xcb-dev:i386 libpulse-dev:i386 libdrm-dev:i386
          rustup target install i686-unknown-linux-gnu
          rustup install nightly
          rustup default nightly

      - name: Download workspace
        run: |
          ./melon download
          cd src
          git init
          echo Init
          git checkout --orphan base
          echo Checkout
          git add -f .
          echo Add
          git commit -am "Firefox"
          echo Commit
          git checkout -b dot
          echo Checkout 2
          cd ..
          sudo rm -rf firefox-*.source.tar.xz

      - name: Fix line-endings
        run: ./melon fix-le

      - name: Import patches
        run: ./melon import --minimal

      - name: Build
        run: |
          cd src
          ./mach bootstrap --application-choice browser --no-interactive
          cd ..
          MOZ_SOURCE_CHANGESET=${{ github.sha }} ./melon build --arch i686

      - name: Package
        run: |
          cd src
          ./mach package
          cd ..

      - name: Export release data
        shell: bash
        run: |
          echo "DOT_VERSION=$(cat package.json | sed -n 's|.*"firefox-display": "\([^"]*\)".*|\1|p')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Make artifact available
        run: |
          cp ./src/obj-*/dist/dot-*.tar.bz2 .
          mv dot-*.tar.bz2 "dot-${{ env.DOT_VERSION }}-i686.tar.bz2"

      - name: Release
        uses: dothq/tag-and-release-and-upload@master
        with:
          github-token: ${{ secrets.ROBOT_TOKEN }}
          version: "${{ env.DOT_VERSION }}-${{ github.run_id }}"
          name: "Nightly v${{ env.DOT_VERSION }}"
          assets: '["dot-${{ env.DOT_VERSION }}-i686.tar.bz2"]'
          body_path: "/home/runner/work/browser-desktop/browser-desktop/.github/RELEASE_TEMPLATE.md"
          overwrite: true

      - name: Build webhook
        uses: dothq/actions-status-discord@master
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: Build
          avatar_url: "https://github.com/dothq.png"

  windows-64:
    name: 🏁 Windows (64-bit)
    runs-on: [self-hosted, Windows, X64]
    env:
        CI_SKIP_INIT: true
        SHELL: /bin/sh
    steps:
      - run: echo ${{ github.run_id }}
        shell: bash --noprofile --norc -eo pipefail {0}

      - uses: actions/checkout@v2

      - name: Add path
        shell: powershell
        run: |
          echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Users\Administrator\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Cache build cache
        uses: actions/cache@v2
        with:
          path: |
            C:\Users\Administrator\AppData\Local\Mozilla\sccache
          key: ${{ runner.os }}-${{ hashFiles('**\.github\workflows') }}

      - name: Disable autocrlf
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          git config core.autocrlf false

      - name: Verify mozconfig
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          echo 'mk_add_options MOZ_MAKE_FLAGS="-j4"' >> configs/windows/mozconfig
          cat configs/windows/mozconfig

      - name: Set up Git
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          git config --global user.email "72629236+dothq-robot@users.noreply.github.com"
          git config --global user.name "dothq-robot"

      - name: Install Typescript
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          npm i typescript

      - name: Download workspace
        shell: bash -leo pipefail {0}
        run: |
          echo $PWD
          ls
          shopt -s expand_aliases
          xz --version
          ./melon download
          ./windows-init.sh

      - name: Import patches
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          ./melon fix-le
          ./melon import --minimal

      - name: Update path
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          echo ::set-output name=NPATH::$(echo $PATH)
          echo "DOT_VERSION=$(cat package.json | sed -n 's|.*"firefox-display": "\([^"]*\)".*|\1|p')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        id: path

      - name: Build
        shell: cmd
        run: |
          type nul > C:\build-script-64.sh
          echo PATH="$PATH:${{ steps.path.outputs.NPATH }}:/c/Users/Administrator/.cargo/bin" >> C:\build-script-64.sh
          echo echo $PATH >> C:\build-script-64.sh
          echo rustup install nightly >> C:\build-script-64.sh
          echo rustup default nightly >> C:\build-script-64.sh
          echo rustc --version >> C:\build-script-64.sh
          echo cd /c/_work/browser-desktop/browser-desktop >> C:\build-script-64.sh
          echo MOZ_SOURCE_CHANGESET=${{ github.sha }} ./melon build >> C:\build-script-64.sh
          C:\mozilla-build\start-shell.bat "C:\build-script-64.sh"

      - name: Package
        shell: cmd
        run: |
          type nul > C:\pack-script-64.sh
          echo PATH="$PATH:${{ steps.path.outputs.NPATH }}:/c/Users/Administrator/.cargo/bin" >> C:\pack-script-64.sh
          echo echo $PATH >> C:\pack-script-64.sh
          echo rustup install nightly >> C:\pack-script-64.sh
          echo rustup default nightly >> C:\pack-script-64.sh
          echo rustc --version >> C:\pack-script-64.sh
          echo cd /c/_work/browser-desktop/browser-desktop/src >> C:\pack-script-64.sh
          echo MOZCONFIG=../configs/windows/mozconfig ./mach package >> C:\pack-script-64.sh
          C:\mozilla-build\start-shell.bat "C:\pack-script-64.sh"

      - name: Make artifact available
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          cd /c/_work/browser-desktop/browser-desktop/src/obj-*/dist/install/sea
          cp dot-*.installer.exe /c/_work/browser-desktop/browser-desktop
          cd /c/_work/browser-desktop/browser-desktop
          mv dot-*.installer.exe "Install Dot Browser ${{ env.DOT_VERSION }}.exe"

      - name: Release
        uses: dothq/tag-and-release-and-upload@master
        with:
          github-token: ${{ secrets.ROBOT_TOKEN }}
          version: "${{ env.DOT_VERSION }}-${{ github.run_id }}"
          name: "Nightly v${{ env.DOT_VERSION }}"
          assets: '["Install Dot Browser ${{ env.DOT_VERSION }}.exe"]'
          body_path: "C:\\_work\\browser-desktop\\browser-desktop\\.github\\RELEASE_TEMPLATE.md"
          overwrite: true

      - name: Build webhook
        uses: dothq/actions-status-discord@master
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: Build
          avatar_url: "https://github.com/dothq.png"

  windows-32:
    name: 🏁 Windows (32-bit)
    runs-on: [self-hosted, Windows, X64]
    env:
        CI_SKIP_INIT: true
        SHELL: /bin/sh
    steps:
      - run: echo ${{ github.run_id }}
        shell: bash --noprofile --norc -eo pipefail {0}

      - uses: actions/checkout@v2

      - name: Add path
        shell: powershell
        run: |
          echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Users\Administrator\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Cache build cache
        uses: actions/cache@v2
        with:
          path: |
            C:\Users\Administrator\AppData\Local\Mozilla\sccache
          key: ${{ runner.os }}-${{ hashFiles('**\.github\workflows') }}

      - name: Disable autocrlf
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          git config core.autocrlf false

      - name: Verify mozconfig
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          echo 'mk_add_options MOZ_MAKE_FLAGS="-j4"' >> configs/windows/mozconfig-i686
          cat configs/windows/mozconfig-i686

      - name: Set up Git
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          git config --global user.email "72629236+dothq-robot@users.noreply.github.com"
          git config --global user.name "dothq-robot"

      - name: Install Typescript
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          npm i typescript

      - name: Download workspace
        shell: bash -leo pipefail {0}
        run: |
          echo $PWD
          ls
          shopt -s expand_aliases
          xz --version
          ./melon download
          ./windows-init.sh

      - name: Import patches
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          ./melon fix-le
          ./melon import --minimal

      - name: Update path
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          echo ::set-output name=NPATH::$(echo $PATH)
          echo "DOT_VERSION=$(cat package.json | sed -n 's|.*"firefox-display": "\([^"]*\)".*|\1|p')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        id: path

      - name: Build
        shell: cmd
        run: |
          type nul > C:\build-script-32.sh
          echo PATH="$PATH:${{ steps.path.outputs.NPATH }}:/c/Users/Administrator/.cargo/bin" >> C:\build-script-32.sh
          echo echo $PATH >> C:\build-script-32.sh
          echo rustup install nightly >> C:\build-script-32.sh
          echo rustup default nightly >> C:\build-script-32.sh
          echo rustc --version >> C:\build-script-32.sh
          echo cd /c/_work/browser-desktop/browser-desktop >> C:\build-script-32.sh
          echo MOZ_SOURCE_CHANGESET=${{ github.sha }} ./melon build --arch i686 >> C:\build-script-32.sh
          C:\mozilla-build\start-shell.bat "C:\build-script-32.sh"

      - name: Package
        shell: cmd
        run: |
          type nul > C:\pack-script-32.sh
          echo PATH="$PATH:${{ steps.path.outputs.NPATH }}:/c/Users/Administrator/.cargo/bin" >> C:\pack-script-32.sh
          echo echo $PATH >> C:\pack-script-32.sh
          echo rustup install nightly >> C:\pack-script-32.sh
          echo rustup default nightly >> C:\pack-script-32.sh
          echo rustc --version >> C:\pack-script-32.sh
          echo cd /c/_work/browser-desktop/browser-desktop/src >> C:\pack-script-32.sh
          echo MOZCONFIG=../configs/windows/mozconfig-i686 ./mach package >> C:\pack-script-32.sh
          C:\mozilla-build\start-shell.bat "C:\pack-script-32.sh"

      - name: Make artifact available
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          cd /c/_work/browser-desktop/browser-desktop/src/obj-*/dist/install/sea
          cp dot-*.installer.exe /c/_work/browser-desktop/browser-desktop
          cd /c/_work/browser-desktop/browser-desktop
          mv dot-*.installer.exe "Install Dot Browser ${{ env.DOT_VERSION }} i386.exe"

      - name: Release
        uses: dothq/tag-and-release-and-upload@master
        with:
          github-token: ${{ secrets.ROBOT_TOKEN }}
          version: "${{ env.DOT_VERSION }}-${{ github.run_id }}"
          name: "Nightly v${{ env.DOT_VERSION }}"
          assets: '["Install Dot Browser ${{ env.DOT_VERSION }} i386.exe"]'
          body_path: "C:\\_work\\browser-desktop\\browser-desktop\\.github\\RELEASE_TEMPLATE.md"
          overwrite: true

      - name: Build webhook
        uses: dothq/actions-status-discord@master
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: Build
          avatar_url: "https://github.com/dothq.png"

  mac:
    name: 🍏 macOS (64-bit)
    runs-on: macos-latest
    env:
        CI_SKIP_INIT: true
        SHELL: /bin/sh
    steps:
      - run: echo ${{ github.run_id }}

      - uses: actions/checkout@v2

      - name: Cache build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/Mozilla.sccache
          key: ${{ runner.os }}-${{ hashFiles('**/.github/workflows') }}

      - name: Verify mozconfig
        run: |
          cat configs/macos/mozconfig

      - name: Set up Git User
        run: |
          git config --global user.email "72629236+dothq-robot@users.noreply.github.com"
          git config --global user.name "dothq-robot"

      - name: Install dependencies
        run: |
          npm i typescript
          brew install dos2unix
          rustup install nightly
          rustup default nightly

      - name: Download workspace
        run: |
          ./melon download
          cd src
          git init
          echo Init
          git checkout --orphan base
          echo Checkout
          git add -f .
          echo Add
          git commit -am "Firefox"
          echo Commit
          git checkout -b dot
          echo Checkout 2
          cd ..
          sudo rm -rf firefox-*.source.tar.xz

      - name: Fix line-endings
        run: ./melon fix-le

      - name: Import patches
        run: ./melon import --minimal

      - name: Build
        run: |
          cd src
          ./mach bootstrap --application-choice browser --no-interactive
          cd ..
          MOZ_SOURCE_CHANGESET=${{ github.sha }} ./melon build

      - name: Package
        run: |
          cd src
          ./mach package
          cd ..

      - name: Export release data
        shell: bash
        run: |
          echo "DOT_VERSION=$(cat package.json | sed -n 's|.*"firefox-display": "\([^"]*\)".*|\1|p')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Make artifact available
        run: |
          cp ./src/obj-*/dist/dot-*.dmg .
          mv dot-*.dmg "Dot Browser ${{ env.DOT_VERSION }}.dmg"

      - name: Release
        uses: dothq/tag-and-release-and-upload@master
        with:
          github-token: ${{ secrets.ROBOT_TOKEN }}
          version: "${{ env.DOT_VERSION }}-${{ github.run_id }}"
          name: "Nightly v${{ env.DOT_VERSION }}"
          assets: '["Dot Browser ${{ env.DOT_VERSION }}.dmg"]'
          body_path: "/Users/runner/work/browser-desktop/browser-desktop/.github/RELEASE_TEMPLATE.md"
          overwrite: true

      - name: Build webhook
        uses: dothq/actions-status-discord@master
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: Build
          avatar_url: "https://github.com/dothq.png"

  source:
    name: 📦 Source tarball
    runs-on: ubuntu-20.04
    env:
        CI_SKIP_INIT: true
        SHELL: /bin/sh
    steps:
      - run: echo ${{ github.run_id }}

      - uses: actions/checkout@v2

      - name: Set up Git User
        run: |
          git config --global user.email "72629236+dothq-robot@users.noreply.github.com"
          git config --global user.name "dothq-robot"

      - name: Install dependencies
        run: |
          npm i typescript

      - name: Download workspace
        run: |
          ./melon download
          cd src
          git init
          echo Init
          git checkout --orphan base
          echo Checkout
          git add -f .
          echo Add
          git commit -am "Firefox"
          echo Commit
          git checkout -b dot
          echo Checkout 2
          cd ..
          sudo rm -rf firefox-*.source.tar.xz

      - name: Fix line-endings
        run: ./melon fix-le

      - name: Import patches
        run: ./melon import --minimal

      - name: Export release data
        shell: bash
        run: |
          echo "DOT_VERSION=$(cat package.json | sed -n 's|.*"firefox-display": "\([^"]*\)".*|\1|p')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Compress
        run: |
          tar -cJvf dot-${{ env.DOT_VERSION }}.source.tar.xz src

      - name: Release
        uses: dothq/tag-and-release-and-upload@master
        with:
          github-token: ${{ secrets.ROBOT_TOKEN }}
          version: "${{ env.DOT_VERSION }}-${{ github.run_id }}"
          name: "Nightly v${{ env.DOT_VERSION }}"
          assets: '["dot-${{ env.DOT_VERSION }}.source.tar.xz"]'
          body_path: "/home/runner/work/browser-desktop/browser-desktop/.github/RELEASE_TEMPLATE.md"
          overwrite: true

      - name: Build webhook
        uses: dothq/actions-status-discord@master
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: Build
          avatar_url: "https://github.com/dothq.png"

  # autorestart:
  #   name: Autorestart
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'schedule' && failure()
  #   needs: [linux, windows, mac]
  #   steps:
  #     - name: Retry the workflow
  #       run: |
  #         curl -i \
  #         -X POST \
  #         -H "Accept: application/vnd.github.v3+json" \
  #         -H "Authorization: token ${{ secrets.ROBOT_TOKEN }}" \
  #         https://api.github.com/repos/dothq/browser-desktop/actions/workflows/4667739/dispatches \
  #         -d '{"ref": "${{ github.ref }}" }'
