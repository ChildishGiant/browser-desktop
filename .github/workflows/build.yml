name: Build

on:
    schedule:
        - cron: "0 20 * * *" # every day at 10pm so the build can be pushed at around midnight
    workflow_dispatch:

jobs:
    linux:
        runs-on: ubuntu-20.04
        env:
            CI_SKIP_INIT: true
            SHELL: /bin/sh
        steps:
            - uses: actions/checkout@v2

            - name: Cache build cache
              uses: actions/cache@v2
              with:
                path: |
                  ~/cache/sccache
                key: ${{ runner.os }}-${{ hashFiles('**/.github/workflows') }}

            - name: Free up space
              run: |
                  sudo rm -rf /usr/share/dotnet
                  sudo rm -rf /opt/ghc
                  sudo rm -rf "/usr/local/share/boost"
                  sudo rm -rf "$AGENT_TOOLSDIRECTORY"

            - name: Verify mozconfig
              run: |
                  cat configs/linux/mozconfig

            - name: Set up Git User
              run: |
                  git config --global user.email "72629236+dothq-robot@users.noreply.github.com"
                  git config --global user.name "dothq-robot"

            - name: Install dependencies
              run: |
                  npm i typescript
                  sudo apt-get install dos2unix

            - name: Download workspace
              run: |
                  ./melon download
                  cd src
                  git init
                  echo Init
                  git checkout --orphan base
                  echo Checkout
                  git add -f .
                  echo Add
                  git commit -am "Firefox"
                  echo Commit
                  git checkout -b dot
                  echo Checkout 2
                  cd ..
                  sudo rm -rf firefox-*.source.tar.xz

            - name: Fix line-endings
              run: ./melon fix-le

            - name: Import patches
              run: ./melon import

            - name: Build
              run: |
                  cd src
                  ./mach bootstrap --application-choice browser --no-interactive
                  cd ..
                  MOZ_SOURCE_CHANGESET=${{ env.GITHUB_SHA }} ./melon build

            - name: Package
              run: |
                  cd src
                  ./mach package
                  cd ..

            - name: Export release data
              shell: bash
              run: |
                  echo "DOT_VERSION=$(cat package.json | sed -n 's|.*"firefox-display": "\([^"]*\)".*|\1|p')" >> $GITHUB_ENV
                  echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

            - name: Make artifact available
              run: |
                  cp ./src/obj-*/dist/dot-*.tar.bz2 .
                  mv dot-*.tar.bz2 "dot-${{ env.DOT_VERSION }}.tar.bz2"

            - name: Release
              uses: dothq/tag-and-release-and-upload@master
              with:
                  github-token: ${{ secrets.ROBOT_TOKEN }}
                  version: "${{ env.DOT_VERSION }}-${{ env.GITHUB_RUN_NUMBER }}"
                  name: "Nightly v${{ env.DOT_VERSION }}"
                  assets: '["dot-${{ env.DOT_VERSION }}.tar.bz2"]'
                  body_path: ".github/RELEASE_TEMPLATE.md"
                  overwrite: true

            - name: Build webhook
              uses: dothq/actions-status-discord@master
              if: always()
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  username: Build
                  avatar_url: "https://github.com/dothq.png"

    windows:
        runs-on: [self-hosted, Windows, X64]
        env:
            CI_SKIP_INIT: true
            SHELL: /bin/sh
        steps:
            - uses: actions/checkout@v2

            - name: Add path
              shell: powershell
              run: |
                  echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
                  echo "C:\Users\Administrator\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

            - name: Cache build cache
              uses: actions/cache@v2
              with:
                path: |
                  C:\Users\Administrator\AppData\Local\Mozilla\sccache
                key: ${{ runner.os }}-${{ hashFiles('**/.github/workflows') }}

            - name: Disable autocrlf
              shell: bash --noprofile --norc -eo pipefail {0}
              run: |
                  git config core.autocrlf false

            - name: Verify mozconfig
              shell: bash --noprofile --norc -eo pipefail {0}
              run: |
                  echo 'mk_add_options MOZ_MAKE_FLAGS="-j4"' >> configs/windows/mozconfig
                  cat configs/linux/mozconfig

            - name: Set up Git
              shell: bash --noprofile --norc -eo pipefail {0}
              run: |
                  git config --global user.email "72629236+dothq-robot@users.noreply.github.com"
                  git config --global user.name "dothq-robot"

            - name: Install Typescript
              shell: bash --noprofile --norc -eo pipefail {0}
              run: |
                  npm i typescript

            - name: Download workspace
              shell: bash -leo pipefail {0}
              run: |
                  echo $PWD
                  ls
                  shopt -s expand_aliases
                  xz --version
                  ./melon download
                  ./windows-init.sh

            - name: Import patches
              shell: bash --noprofile --norc -eo pipefail {0}
              run: |
                  ./melon fix-le
                  ./melon import

            - name: Update path
              shell: bash --noprofile --norc -eo pipefail {0}
              run: |
                  echo ::set-output name=NPATH::$(echo $PATH)
                  echo "DOT_VERSION=$(cat package.json | sed -n 's|.*"firefox-display": "\([^"]*\)".*|\1|p')" >> $GITHUB_ENV
                  echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
              id: path

            - name: Build
              shell: cmd
              run: |
                  type nul > C:\build-script.sh
                  echo PATH="$PATH:${{ steps.path.outputs.NPATH }}:/c/Users/Administrator/.cargo/bin" >> C:\build-script.sh
                  echo echo $PATH >> C:\build-script.sh
                  echo rustup install stable >> C:\build-script.sh
                  echo rustup default stable >> C:\build-script.sh
                  echo rustc --version >> C:\build-script.sh
                  echo cd /c/_work/browser-desktop/browser-desktop >> C:\build-script.sh
                  echo MOZ_SOURCE_CHANGESET=${{ env.GITHUB_SHA }} ./melon build >> C:\build-script.sh
                  C:\mozilla-build\start-shell.bat "C:\build-script.sh"

            - name: Package
              run: |
                  type nul > C:\pack-script.sh
                  echo PATH="$PATH:${{ steps.path.outputs.NPATH }}:/c/Users/Administrator/.cargo/bin" >> C:\build-script.sh
                  echo echo $PATH >> C:\build-script.sh
                  echo rustup install stable >> C:\build-script.sh
                  echo rustup default stable >> C:\build-script.sh
                  echo rustc --version >> C:\build-script.sh
                  echo cd /c/_work/browser-desktop/browser-desktop/src >> C:\pack-script.sh
                  echo MOZCONFIG=../configs/windows/mozconfig ./mach package >> C:\pack-script.sh
                  C:\mozilla-build\start-shell.bat "C:\pack-script.sh"

            - name: Make artifact available
              shell: bash --noprofile --norc -eo pipefail {0}
              run: |
                  cd /c/_work/browser-desktop/browser-desktop/src/obj-*/dist/install/sea
                  cp dot-*.installer.exe /c/_work/browser-desktop/browser-desktop
                  cd /c/_work/browser-desktop/browser-desktop
                  mv dot-*.installer.exe "Install Dot Browser ${{ env.DOT_VERSION }}.exe"

            - name: Release
              uses: dothq/tag-and-release-and-upload@master
              with:
                  github-token: ${{ secrets.ROBOT_TOKEN }}
                  version: "${{ env.DOT_VERSION }}-${{ env.GITHUB_RUN_NUMBER }}"
                  name: "Nightly v${{ env.DOT_VERSION }}"
                  assets: '["Install Dot Browser ${{ env.DOT_VERSION }}.exe"]'
                  body_path: "C:\\_work\\browser-desktop\\browser-desktop\\.github\\RELEASE_TEMPLATE.md"
                  overwrite: true

            - name: Build webhook
              uses: dothq/actions-status-discord@master
              if: always()
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  username: Build
                  avatar_url: "https://github.com/dothq.png"

    mac:
        runs-on: macos-latest
        env:
            CI_SKIP_INIT: true
            SHELL: /bin/sh
        steps:
            - uses: actions/checkout@v2

            - name: Cache build cache
              uses: actions/cache@v2
              with:
                path: |
                  ~/cache/sccache
                key: ${{ runner.os }}-${{ hashFiles('**/.github/workflows') }}

            - name: Verify mozconfig
              run: |
                  cat configs/macos/mozconfig

            - name: Set up Git User
              run: |
                  git config --global user.email "72629236+dothq-robot@users.noreply.github.com"
                  git config --global user.name "dothq-robot"

            - name: Install dependencies
              run: |
                  npm i typescript
                  brew install dos2unix

            - name: Download workspace
              run: |
                  ./melon download
                  cd src
                  git init
                  echo Init
                  git checkout --orphan base
                  echo Checkout
                  git add -f .
                  echo Add
                  git commit -am "Firefox"
                  echo Commit
                  git checkout -b dot
                  echo Checkout 2
                  cd ..
                  sudo rm -rf firefox-*.source.tar.xz

            - name: Fix line-endings
              run: ./melon fix-le

            - name: Import patches
              run: ./melon import

            - name: Build
              run: |
                  cd src
                  ./mach bootstrap --application-choice browser --no-interactive
                  cd ..
                  MOZ_SOURCE_CHANGESET=${{ env.GITHUB_SHA }} ./melon build

            - name: Package
              run: |
                  cd src
                  ./mach package
                  cd ..

            - name: Export release data
              shell: bash
              run: |
                  echo "DOT_VERSION=$(cat package.json | sed -n 's|.*"firefox-display": "\([^"]*\)".*|\1|p')" >> $GITHUB_ENV
                  echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

            - name: Make artifact available
              run: |
                  cp ./src/obj-*/dist/dot-*.tar.bz2 .
                  mv dot-*.tar.bz2 "dot-${{ env.DOT_VERSION }}.tar.bz2"

            - name: Release
              uses: dothq/tag-and-release-and-upload@master
              with:
                  github-token: ${{ secrets.ROBOT_TOKEN }}
                  version: "${{ env.DOT_VERSION }}-${{ env.GITHUB_RUN_NUMBER }}"
                  name: "Nightly v${{ env.DOT_VERSION }}"
                  assets: '["dot-${{ env.DOT_VERSION }}.tar.bz2"]'
                  body_path: ".github/RELEASE_TEMPLATE.md"
                  overwrite: true

            - name: Build webhook
              uses: dothq/actions-status-discord@master
              if: always()
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  username: Build
                  avatar_url: "https://github.com/dothq.png"