diff --git a/browser/components/BrowserGlue.jsm b/browser/components/BrowserGlue.jsm
index 3ef1e1453591039f9c34edfe8b14af5d044d2266..fe58d26ce54edd1c6e29a3a4216b8de56cc82446 100644
--- a/browser/components/BrowserGlue.jsm
+++ b/browser/components/BrowserGlue.jsm
@@ -179,6 +179,20 @@ let JSPROCESSACTORS = {
  * available at https://firefox-source-docs.mozilla.org/dom/ipc/jsactors.html
  */
 let JSWINDOWACTORS = {
+  AboutHistory: {
+    parent: {
+      moduleURI: "resource:///actors/AboutHistoryParent.jsm",
+    },
+    child: {
+      moduleURI: "resource:///actors/AboutHistoryChild.jsm",
+
+      events: {
+        DOMWindowCreated: { capture: true },
+      },
+    },
+
+    matches: ["about:history"],
+  },
   AboutLogins: {
     parent: {
       moduleURI: "resource:///actors/AboutLoginsParent.jsm",
@@ -520,14 +534,17 @@ let JSWINDOWACTORS = {
       moduleURI: "resource:///actors/LightweightThemeChild.jsm",
       events: {
         pageshow: { mozSystemGroup: true },
+        DOMWindowCreated: {},
+        click: {},
       },
     },
     includeChrome: true,
     allFrames: true,
+    remoteTypes: ["privilegedabout"],
     matches: [
-      "about:home",
-      "about:newtab",
-      "about:welcome",
+      "about:*",
+      "about:certerror?*", 
+      "about:neterror?*",
       "chrome://browser/content/syncedtabs/sidebar.xhtml",
       "chrome://browser/content/places/historySidebar.xhtml",
       "chrome://browser/content/places/bookmarksSidebar.xhtml",
@@ -765,8 +782,8 @@ let JSWINDOWACTORS = {
     !Services.startup.showedPreXULSkeletonUI &&
     Services.prefs.getCharPref(
       "extensions.activeThemeID",
-      "default-theme@mozilla.org"
-    ) != "default-theme@mozilla.org"
+      "dynamic@themes.dothq.co"
+    ) != "dynamic@themes.dothq.co"
   ) {
     return;
   }
@@ -1358,62 +1375,62 @@ BrowserGlue.prototype = {
     SessionStore.init();
 
     AddonManager.maybeInstallBuiltinAddon(
-      "firefox-compact-light@mozilla.org",
+      "light@themes.dothq.co",
       "1.1",
       "resource://builtin-themes/light/"
     );
     AddonManager.maybeInstallBuiltinAddon(
-      "firefox-compact-dark@mozilla.org",
+      "dark@themes.dothq.co",
       "1.1",
       "resource://builtin-themes/dark/"
     );
 
-    if (
-      AppConstants.NIGHTLY_BUILD &&
-      Services.prefs.getBoolPref("browser.proton.enabled", false)
-    ) {
-      // Temporarily install a fork of the light & dark themes to do development on for
-      // Proton. We only make this available if `browser.proton.enabled` is set
-      // to true, and we make sure to uninstall it again during shutdown.
-      const kProtonDarkThemeID = "firefox-compact-proton-dark@mozilla.org";
-      AddonManager.maybeInstallBuiltinAddon(
-        kProtonDarkThemeID,
-        "1.0",
-        "resource://builtin-themes/proton-dark/"
-      );
-
-      const kProtonLightThemeID = "firefox-compact-proton-light@mozilla.org";
-      AddonManager.maybeInstallBuiltinAddon(
-        kProtonLightThemeID,
-        "1.0",
-        "resource://builtin-themes/proton-light/"
-      );
-      AsyncShutdown.profileChangeTeardown.addBlocker(
-        "Uninstall Proton themes",
-        async () => {
-          for (let themeID of [kProtonDarkThemeID, kProtonLightThemeID]) {
-            try {
-              let addon = await AddonManager.getAddonByID(themeID);
-              await addon.uninstall();
-            } catch (e) {
-              Cu.reportError(`Failed to uninstall ${themeID} on shutdown`);
-            }
-          }
-        }
-      );
-    }
+//    if (
+//      AppConstants.NIGHTLY_BUILD &&
+//      Services.prefs.getBoolPref("browser.proton.enabled", false)
+//    ) {
+//      // Temporarily install a fork of the light & dark themes to do development on for
+//      // Proton. We only make this available if `browser.proton.enabled` is set
+//      // to true, and we make sure to uninstall it again during shutdown.
+//      const kProtonDarkThemeID = "firefox-compact-proton-dark@mozilla.org";
+//      AddonManager.maybeInstallBuiltinAddon(
+//        kProtonDarkThemeID,
+//        "1.0",
+//        "resource://builtin-themes/proton-dark/"
+//      );
+//
+//      const kProtonLightThemeID = "firefox-compact-proton-light@mozilla.org";
+//      AddonManager.maybeInstallBuiltinAddon(
+//        kProtonLightThemeID,
+//        "1.0",
+//        "resource://builtin-themes/proton-light/"
+//      );
+//      AsyncShutdown.profileChangeTeardown.addBlocker(
+//        "Uninstall Proton themes",
+//        async () => {
+//          for (let themeID of [kProtonDarkThemeID, kProtonLightThemeID]) {
+//            try {
+//              let addon = await AddonManager.getAddonByID(themeID);
+//              await addon.uninstall();
+//            } catch (e) {
+//              Cu.reportError(`Failed to uninstall ${themeID} on shutdown`);
+//            }
+//          }
+//        }
+//      );
+//    }
 
     AddonManager.maybeInstallBuiltinAddon(
-      "firefox-alpenglow@mozilla.org",
-      "1.2",
-      "resource://builtin-themes/alpenglow/"
+      "fusion@themes.dothq.co",
+      "0.1",
+      "resource://builtin-themes/fusion/"
     );
 
     if (AppConstants.MOZ_NORMANDY) {
       Normandy.init();
     }
 
-    SaveToPocket.init();
+    // SaveToPocket.init();
 
     AboutHomeStartupCache.init();
 
