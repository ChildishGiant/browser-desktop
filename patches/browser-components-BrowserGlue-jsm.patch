diff --git a/browser/components/BrowserGlue.jsm b/browser/components/BrowserGlue.jsm
index 858e24b8f91089545c84847f66714fea033b4b48..a3bf154c325317c75b80ffb59f11f538c143197a 100644
--- a/browser/components/BrowserGlue.jsm
+++ b/browser/components/BrowserGlue.jsm
@@ -179,6 +179,20 @@ let JSPROCESSACTORS = {
  * available at https://firefox-source-docs.mozilla.org/dom/ipc/jsactors.html
  */
 let JSWINDOWACTORS = {
+  AboutHistory: {
+    parent: {
+      moduleURI: "resource:///actors/AboutHistoryParent.jsm",
+    },
+    child: {
+      moduleURI: "resource:///actors/AboutHistoryChild.jsm",
+
+      events: {
+        DOMWindowCreated: { capture: true },
+      },
+    },
+
+    matches: ["about:history"],
+  },
   AboutLogins: {
     parent: {
       moduleURI: "resource:///actors/AboutLoginsParent.jsm",
@@ -526,7 +540,7 @@ let JSWINDOWACTORS = {
       moduleURI: "resource:///actors/LightweightThemeChild.jsm",
       events: {
         pageshow: { mozSystemGroup: true },
-        DOMContentLoaded: {},
+        DOMContentLoaded: { mozSystemGroup: true },
       },
     },
     includeChrome: true,
@@ -535,9 +549,12 @@ let JSWINDOWACTORS = {
       "about:home",
       "about:newtab",
       "about:welcome",
+      "about:preferences",
       "chrome://browser/content/syncedtabs/sidebar.xhtml",
       "chrome://browser/content/places/historySidebar.xhtml",
       "chrome://browser/content/places/bookmarksSidebar.xhtml",
+      "chrome://browser/content/sidebars/bookmarks/sidebar.html",
+      "chrome://browser/content/preferences/new/newpreferences.html"
     ],
   },
 
@@ -1367,27 +1384,28 @@ BrowserGlue.prototype = {
     SessionStore.init();
 
     AddonManager.maybeInstallBuiltinAddon(
-      "firefox-compact-light@mozilla.org",
+      "light@themes.dothq.coorg",
       "1.2",
       "resource://builtin-themes/light/"
     );
     AddonManager.maybeInstallBuiltinAddon(
-      "firefox-compact-dark@mozilla.org",
+      "dark@themes.dothq.co",
       "1.2",
       "resource://builtin-themes/dark/"
     );
 
     AddonManager.maybeInstallBuiltinAddon(
-      "firefox-alpenglow@mozilla.org",
-      "1.4",
-      "resource://builtin-themes/alpenglow/"
+      "fusion@themes.dothq.co",
+      "0.1",
+      "resource://builtin-themes/fusion/"
     );
 
     if (AppConstants.MOZ_NORMANDY) {
       Normandy.init();
     }
 
-    SaveToPocket.init();
+    // Stop pocket from being enabled. Maybe make this option avaiable in settings somewhere?
+    // SaveToPocket.init();
 
     AboutHomeStartupCache.init();
 
@@ -2107,6 +2125,22 @@ BrowserGlue.prototype = {
     Services.wm.addListener(windowListener);
   },
 
+  _monitorQrCodesPref() {
+    const PREF = "browser.qrcodes.enabled";
+    const ID = "qr@dothq.co";
+    const _checkQrCodesPref = async () => {
+      let addon = await AddonManager.getAddonByID(ID);
+      let enabled = Services.prefs.getBoolPref(PREF, true);
+      if (enabled && !addon.isActive) {
+        await addon.enable({ allowSystemAddons: true });
+      } else if (!enabled && addon.isActive) {
+        await addon.disable({ allowSystemAddons: true });
+      }
+    };
+    Services.prefs.addObserver(PREF, _checkQrCodesPref);
+    _checkQrCodesPref();
+  },
+
   _showNewInstallModal() {
     // Allow other observers of the same topic to run while we open the dialog.
     Services.tm.dispatchToMainThread(() => {
@@ -2199,6 +2233,7 @@ BrowserGlue.prototype = {
     this._monitorHTTPSOnlyPref();
     this._monitorIonPref();
     this._monitorIonStudies();
+    this._monitorQrCodesPref();
 
     let pService = Cc["@mozilla.org/toolkit/profile-service;1"].getService(
       Ci.nsIToolkitProfileService
